{"version":3,"sources":["Sorting Algorithms/bubbleSort.js","Sorting Algorithms/heapSort.js","Sorting Algorithms/insertionSort.js","Sorting Algorithms/mergeSort.js","Sorting Algorithms/quickSort.js","Sorting Algorithms/selectionSort.js","Sorting Visualizer Components/SortingVisualizer.js","App.js","reportWebVitals.js","index.js"],"names":["bubbleSortAnimation","array","console","log","n","length","animation","i","j","push","i1","i2","ok","lchild","rchild","max_heapify","size","max_","heapSortAnimation","Math","floor","create_max_heap","insertionSortAnimation","mergeSortAnimation","mergesort","l","r","mid","gap","ceil","merge","quicksortAnimation","quicksort","p","rangeSize","randIndx","random","partition","selectionSortAnimation","minIdx","SortingVisualizer","props","reset_array","setState","create_array","showAnimation","sortAnimationFunction","state","bars","document","getElementsByClassName","objectsToBlock","querySelectorAll","forEach","element","classList","remove","add","disabled","interval","speed","it","timeout","ob","setInterval","clearInterval","element1","element2","style","backgroundColor","rightPosition","setTimeout","default","wrongPosition","height","speedChange","e","target","value","arraySizeChange","array_size","isVisualSorted","bind","create_visualizer_elements","this","new_array","max_value","new_value","map","h","toString","className","onClick","for","type","min","max","name","defaultValue","id","onChange","ref","input","myinput","myinput1","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"qQAAO,SAASA,EAAoBC,GAChCC,QAAQC,IAAI,cACZ,IAAIC,EAAIH,EAAMI,OAEdH,QAAQC,IAAI,IAAKC,GACjBF,QAAQC,IAAI,QAASF,GAErB,IADA,IAAIK,EAAY,GACRC,EAAI,EAAGA,EAAGH,EAAGG,IACjB,IAAI,IAAIC,EAAI,EAAGA,EAAIJ,EAAIG,EAAI,EAAGC,IAE1B,GAAGP,EAAMO,GAAKP,EAAMO,EAAI,GAAG,CAAC,IAAD,EACI,CAACP,EAAMO,EAAI,GAAIP,EAAMO,IAA/CP,EAAMO,GADgB,KACZP,EAAMO,EAAI,GADE,KAEvBF,EAAUG,KAAK,CAACC,GAAIF,EAAGG,GAAIH,EAAI,EAAGI,IAAG,SAIrCN,EAAUG,KAAK,CAACC,GAAGF,EAAGG,GAAIH,EAAG,EAAGI,IAAI,IAKhD,OADAV,QAAQC,IAAIG,GACLA,ECrBX,SAASO,EAAON,GACZ,OAAW,EAAJA,EAAQ,EAGnB,SAASO,EAAOP,GACZ,OAAOM,EAAON,GAAK,EAGvB,SAASQ,EAAYR,EAAGN,EAAOe,EAAMV,GACjC,IAAIW,EAAOV,EAQX,GAPGM,EAAON,GAAKS,GAAQf,EAAMY,EAAON,IAAMN,EAAMgB,KAC5CA,EAAOJ,EAAON,IAEfO,EAAOP,GAAKS,GAAQf,EAAMa,EAAOP,IAAMN,EAAMgB,KAC5CA,EAAOH,EAAOP,IAGfU,IAASV,EAAZ,CAT2C,MAcjB,CAACN,EAAMM,GAAIN,EAAMgB,IAA1ChB,EAAMgB,GAdoC,KAc7BhB,EAAMM,GAduB,KAe3CD,EAAUG,KAAK,CAACC,GAAIO,EAAMN,GAAIJ,EAAGK,IAAI,IAErCG,EAAYE,EAAMhB,EAAOe,EAAMV,QAP3BA,EAAUG,KAAK,CAACC,GAAIO,EAAMN,GAAIJ,EAAGK,IAAI,IAiBtC,SAASM,EAAkBjB,GAC9BC,QAAQC,MACR,IAAIC,EAAIH,EAAMI,OAEVC,EAAY,GAEZU,EAAOZ,GAbf,SAAyBH,EAAOK,GAE5B,IADA,IAAMU,EAAOf,EAAMI,OACXE,EAAIY,KAAKC,MAAMJ,EAAK,GAAK,EAAGT,GAAK,EAAGA,IACxCQ,EAAYR,EAAGN,EAAOe,EAAMV,GAWhCe,CAAgBpB,EAAOK,GAEvB,IAAI,IAAIC,EAAIH,EAAI,EAAGG,EAAI,EAAGA,IAAI,CAAC,IAAD,EACG,CAACN,EAAMe,EAAO,GAAIf,EAAM,IAApDA,EAAM,GADmB,KACfA,EAAMe,EAAM,GADG,KAE1BV,EAAUG,KAAK,CAACC,GAAI,EAAGC,GAAIK,EAAO,EAAGJ,IAAI,IAEzCG,EAAY,EAAGd,IADfe,EAC4BV,GAEhC,OAAOA,EClDJ,SAASgB,EAAuBrB,GACnCC,QAAQC,MAKR,IAJA,IAAIC,EAAIH,EAAMI,OAEVC,EAAY,GAERC,EAAI,EAAGA,EAAIH,EAAGG,IAAK,CAEvB,IADA,IAAIC,EAAID,EACFC,EAAI,GAAKP,EAAMO,EAAE,GAAKP,EAAMO,IAAG,CAAC,IAAD,EACR,CAACP,EAAMO,EAAE,GAAIP,EAAMO,IAA3CP,EAAMO,GAD0B,KACtBP,EAAMO,EAAE,GADc,KAEjCF,EAAUG,KAAK,CAACC,GAAIF,EAAGG,GAAIH,EAAE,EAAGI,IAAG,IACnCJ,IAEDA,EAAI,GACHF,EAAUG,KAAK,CAACC,GAAIF,EAAGG,GAAIH,EAAE,EAAGI,IAAG,IAE3C,OAAON,EChBJ,SAASiB,EAAmBtB,GAC/BC,QAAQC,IAAI,sBACZ,IAAIG,EAAY,GAIhB,OADAkB,EAAU,EAFFvB,EAAMI,OAEG,EAAGJ,EAAOK,GACpBA,EAGX,SAASkB,EAAUC,EAAGC,EAAGzB,EAAOK,GAE5B,GADAJ,QAAQC,IAAI,KAAMsB,EAAGC,GAClBA,EAAID,IAAM,EAAb,CACA,IAAIE,EAAMR,KAAKC,OAAOK,EAAIC,GAAI,GAC9BF,EAAUC,EAAGE,EAAK1B,EAAOK,GACzBkB,EAAUG,EAAK,EAAGD,EAAGzB,EAAOK,GAMhC,SAAemB,EAAGE,EAAKD,EAAGzB,EAAOK,GAC7BJ,QAAQC,IAAI,IAAKsB,EAAGE,EAAKD,GACzB,IAAIV,EAAOU,EAAID,EAAI,EACnB,GAAGT,GAAQ,EAAG,OACd,IAAIY,EAAMT,KAAKU,KAAKb,EAAM,GAE1B,KAAMY,EAAM,GAAE,CACV,IAAI,IAAIrB,EAAIkB,EAAGlB,EAAKqB,GAAMF,EAAGnB,IACzB,GAAGN,EAAMM,GAAKN,EAAMM,EAAIqB,GAAK,CAAC,IAAD,EACG,CAAC3B,EAAMM,EAAIqB,GAAM3B,EAAMM,IAAlDN,EAAMM,GADkB,KACdN,EAAMM,EAAGqB,GADK,KAEzBtB,EAAUG,KAAK,CAACC,GAAIH,EAAGI,GAAIJ,EAAIqB,EAAKhB,IAAG,SAEtCN,EAAUG,KAAK,CAACC,GAAIH,EAAGI,GAAIJ,EAAIqB,EAAKhB,IAAG,IAEhD,GAAGgB,GAAO,EAAG,MACbA,EAAMT,KAAKU,KAAKD,EAAK,IAnBzBE,CAAML,EAAGE,EAAKD,EAAGzB,EAAOK,IChBrB,SAASyB,EAAmB9B,GAC/BC,QAAQC,MACR,IAAIC,EAAIH,EAAMI,OAEVC,EAAY,GAIhB,OAHAJ,QAAQC,IAAIF,GACZ+B,EAAU,EAAG5B,EAAG,EAAGH,EAAOK,GAC1BJ,QAAQC,IAAIF,GACLK,EAGX,SAAS0B,EAAUP,EAAGC,EAAGzB,EAAOK,GAC5B,GAAGoB,EAAKD,IAAM,EAAd,CACA,IAAIQ,EAMR,SAAmBR,EAAGC,EAAGzB,EAAOK,GAE5B,IAAI4B,EAAYR,EAAID,EAAI,EACpBU,EAAahB,KAAKC,MAAsB,IAAhBD,KAAKiB,UAAmBF,EAAaT,EAH3B,EAKR,CAACxB,EAAMyB,GAAIzB,EAAMkC,IAA9ClC,EAAMkC,GAL+B,KAKpBlC,EAAMyB,GALc,KAMtCpB,EAAUG,KAAK,CAACC,GAAIyB,EAAUxB,GAAIe,EAAGd,IAAG,IAGxC,IADA,IAAIL,EAAIkB,EACAjB,EAAIiB,EAAGjB,EAAIkB,EAAGlB,IAClB,GAAGP,EAAMO,IAAMP,EAAMyB,GAAG,CAAC,IAAD,EACG,CAACzB,EAAMO,GAAIP,EAAMM,IAAvCN,EAAMM,GADa,KACTN,EAAMO,GADG,KAEpBF,EAAUG,KAAK,CAACC,GAAIH,EAAGI,GAAIH,EAAGI,IAAG,IACjCL,SAGAD,EAAUG,KAAK,CAACC,GAAIH,EAAGI,GAAIH,EAAGI,IAAG,IAGzC,GAAGL,IAAMmB,EAAE,CAAC,IAAD,EACgB,CAACzB,EAAMyB,GAAIzB,EAAMM,IAAvCN,EAAMM,GADA,KACIN,EAAMyB,GADV,KAEPpB,EAAUG,KAAK,CAACC,GAAIH,EAAGI,GAAIe,EAAGd,IAAG,IAGrC,OAAOL,EA9BC8B,CAAUZ,EAAGC,EAAGzB,EAAOK,GAE5B2B,EAAE,EAAIR,GAAGO,EAAUP,EAAGQ,EAAI,EAAGhC,EAAOK,GACpCoB,EAAIO,EAAG,GAAGD,EAAUC,EAAI,EAAGP,EAAGzB,EAAOK,IChBrC,SAASgC,EAAuBrC,GACnCC,QAAQC,MAKR,IAJA,IAAIC,EAAIH,EAAMI,OAEVC,EAAY,GAERC,EAAI,EAAGA,EAAIH,EAAGG,IAAK,CAEvB,IADA,IAAIgC,EAAShC,EACLC,EAAID,EAAI,EAAGC,EAAIJ,EAAGI,IACnBP,EAAMO,GAAKP,EAAMsC,IAChBA,EAAS/B,EACTF,EAAUG,KAAK,CAACC,GAAI6B,EAAQ5B,GAAIH,EAAGI,IAAG,KAErCN,EAAUG,KAAK,CAACC,GAAI6B,EAAQ5B,GAAIH,EAAGI,IAAG,IAE/C,GAAG2B,IAAWhC,EAAE,CAAC,IAAD,EACgB,CAACN,EAAMM,GAAIN,EAAMsC,IAA5CtC,EAAMsC,GADK,KACItC,EAAMM,GADV,KAEZD,EAAUG,KAAK,CAACC,GAAI6B,EAAQ5B,GAAIJ,EAAGK,IAAG,SAErCN,EAAUG,KAAK,CAACC,GAAI6B,EAAQ5B,GAAIJ,EAAGK,IAAG,IAE/C,OAAON,E,WCbLkC,E,kDACF,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAoBVC,YAAc,WACV,EAAKC,SAAS,CAAC1C,MAAO,EAAK2C,kBAtBZ,EAoDnBC,cAAgB,SAACC,GAEb5C,QAAQC,IAAI,QAGZ,IAAIG,EAAYwC,EAAsB,EAAKC,MAAM9C,OAE3C+C,EAAOC,SAASC,uBAAuB,uBACvCC,EAAiBF,SAASG,iBAAiB,0BAGjDD,EAAeE,SAAQ,SAAAC,GACnBA,EAAQC,UAAUC,OAAO,kBACzBF,EAAQC,UAAUE,IAAI,sBACtBH,EAAQI,UAAW,KAKvBxD,QAAQC,IAAI,mBAAoBG,EAAUD,QAE1C,IAAIsD,EAAW,IAAK,EAAKZ,MAAMa,MAAQC,EAAK,EACxCC,EAAUH,EAAW,GACrBI,EAAKC,aAAY,WACjB,GAAGH,GAAMvD,EAAUD,OACf4D,cAAcF,GAKdZ,EAAeE,SAAQ,SAAAC,GACnBA,EAAQC,UAAUC,OAAO,sBACzBF,EAAQC,UAAUE,IAAI,kBACtBH,EAAQI,UAAW,SAGvB,CAEC,IAAMQ,EAAWlB,EAAK1C,EAAUuD,GAAInD,IAC9ByD,EAAWnB,EAAK1C,EAAUuD,GAAIlD,IAErC,GAAGL,EAAUuD,GAAIjD,GACbsD,EAASE,MAAMC,gBAAkBF,EAASC,MAAMC,gBAAiB,EAAKtB,MAAMsB,gBAAgBC,cAC5FC,YAAW,WACPL,EAASE,MAAMC,gBAAkB,EAAKtB,MAAMsB,gBAAgBG,QAC5DL,EAASC,MAAMC,gBAAkB,EAAKtB,MAAMsB,gBAAgBG,UAC7DV,OAEH,CACAI,EAASE,MAAMC,gBAAkBF,EAASC,MAAMC,gBAAiB,EAAKtB,MAAMsB,gBAAgBI,cAC5FF,YAAW,WACPL,EAASE,MAAMC,gBAAkB,EAAKtB,MAAMsB,gBAAgBG,QAC5DL,EAASC,MAAMC,gBAAkB,EAAKtB,MAAMsB,gBAAgBG,UAC7DV,GALH,MAMiD,CAACK,EAASC,MAAMM,OAAQR,EAASE,MAAMM,QAAvFR,EAASE,MAAMM,OANhB,KAMwBP,EAASC,MAAMM,OANvC,KASJb,OAELF,IA/GY,EAmHnBgB,YAAc,SAACC,GACX1E,QAAQC,IAAI,iBAEZ,EAAKwC,SAAS,CAACiB,MAAOgB,EAAEC,OAAOC,SAtHhB,EAwHnBC,gBAAkB,SAACH,GACf1E,QAAQC,IAAI,qBAEZD,QAAQC,IAAIyE,EAAEC,OAAOC,OACrB,EAAKnC,SAAS,CAACqC,WAAYJ,EAAEC,OAAOC,MAAO7E,MAAO,EAAK2C,aAAagC,EAAEC,OAAOC,UA1H7E,EAAK/B,MAAQ,CACT9C,MAAM,GACN+E,WAAY,GACZpB,MAAM,EACNqB,gBAAgB,EAChBZ,gBAAkB,CACdG,QAAS,UACTF,cAAe,UACfG,cAAe,YAGvB,EAAK7B,aAAe,EAAKA,aAAasC,KAAlB,gBAEpB,EAAKC,2BAA6B,EAAKA,2BAA2BD,KAAhC,gBAClC,EAAKP,YAAc,EAAKA,YAAYO,KAAjB,gBAhBJ,E,gDAyBnB,WAAiD,IAApCF,EAAmC,uDAAtBI,KAAKrC,MAAMiC,WACjC9E,QAAQC,IAAI,kBAGZ,IAFA,IAAIkF,EAAY,GACVC,EAAY,IACV/E,EAAI,EAAGA,EAAGyE,EAAYzE,IAAK,CAC/B,IAAMgF,EAAcpE,KAAKC,MAAuB,IAAhBD,KAAKiB,UAAqBkD,EAAa,EACvED,EAAU5E,KAAK8E,GAEnB,OAAOF,I,+BAKX,WACInF,QAAQC,IAAI,0BACZiF,KAAKzC,SAAS,CAAC1C,MAAOmF,KAAKxC,mB,wCAG/B,WAGI,OAFA1C,QAAQC,IAAI,gCACZD,QAAQC,IAAIiF,KAAKrC,MAAM9C,OAChBmF,KAAKrC,MAAM9C,MAAMuF,KAAI,SAAClC,GACzB,IAAImC,EAAInC,EAAQoC,WAAa,KAC7B,OAAO,qBAAKtB,MAAO,CAACM,OAAOe,GAAKE,UAAU,6B,oBA+ElD,WAAU,IAAD,OAGL,OAFAzF,QAAQC,IAAIiF,KAAKrC,MAAM9C,OAGnB,qCACI,sBAAK0F,UAAU,SAAf,UACI,oDACA,sBAAKA,UAAU,cAAf,UACI,wBAAQA,UAAU,oDAAoDC,QAAS,WAAO,EAAK/C,cAAc7C,IAAzG,yBACA,wBAAQ2F,UAAU,mDAAmDC,QAAS,WAAO,EAAK/C,cAAcvB,IAAxG,4BACA,wBAAQqE,UAAU,oDAAoDC,QAAS,WAAO,EAAK/C,cAAcP,IAAzG,4BACA,wBAAQqD,UAAU,mDAAmDC,QAAS,WAAO,EAAK/C,cAAcd,IAAxG,4BACA,wBAAQ4D,UAAU,mDAAmDC,QAAS,WAAO,EAAK/C,cAAc3B,IAAxG,uBACA,wBAAQyE,UAAU,mDAAmDC,QAAS,WAAO,EAAK/C,cAActB,IAAxG,wBACA,wBAAQoE,UAAU,2DAA2DC,QAASR,KAAK1C,YAA3F,sBAEJ,sBAAKiD,UAAU,UAAf,UACI,sBAAKA,UAAU,aAAf,UACI,uBAAOE,IAAI,aAAX,mBACA,uBAAOC,KAAK,QAAQC,IAAI,IAAIC,IAAI,KAAKC,KAAK,QAAQC,aAAa,IAAIP,UAAU,4DAA6DQ,GAAG,aAAaC,SAAU,SAACxB,GAAO,EAAKD,YAAYC,IAAKyB,IAAK,SAACC,GAAD,OAAU,EAAKC,QAAUD,QAEpO,sBAAKX,UAAU,aAAf,UACI,uBAAOE,IAAI,cAAX,kBACA,uBAAOC,KAAK,QAAQC,IAAI,KAAKC,IAAI,KAAKC,KAAK,SAASC,aAAa,KAAKP,UAAU,sEAAuEQ,GAAG,cAAcC,SAAU,SAACxB,GAAO,EAAKG,gBAAgBH,IAAKyB,IAAK,SAACC,GAAD,OAAU,EAAKE,SAAWF,cAM/P,qBAAKX,UAAU,aAAf,SACKP,KAAKD,sC,GA9JMsB,aAqKjBjE,IClKAkE,MANf,WACE,OACE,cAAC,EAAD,KCKWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFrE,SAASsE,eAAe,SAM1BZ,M","file":"static/js/main.076bc35f.chunk.js","sourcesContent":["export function bubbleSortAnimation(array){\r\n    console.log(\"sorting_()\");\r\n    let n = array.length;\r\n    // let array = this.state.array; //copying with refrence\r\n    console.log(\"n\", n);\r\n    console.log(\"array\", array);\r\n    let animation = [];\r\n    for(let i = 0; i< n; i++){\r\n        for(let j = 0; j < n - i - 1; j ++){\r\n            // console.log(i, j);\r\n            if(array[j] > array[j + 1]){\r\n                [array[j], array[j + 1]] = [array[j + 1], array[j]];\r\n                animation.push({i1: j, i2: j + 1, ok:false});\r\n                // console.log(j, j + 1);\r\n            }\r\n            else{\r\n                animation.push({i1:j, i2: j +1, ok: true});\r\n            }\r\n        }\r\n    }\r\n    console.log(animation);\r\n    return animation;\r\n}","function lchild(i){\r\n    return i * 2 + 1;\r\n}\r\n\r\nfunction rchild(i){\r\n    return lchild(i) + 1;\r\n}\r\n\r\nfunction max_heapify(i, array, size, animation){\r\n    let max_ = i;\r\n    if(lchild(i) < size && array[lchild(i)] > array[max_]){\r\n        max_ = lchild(i);\r\n    }\r\n    if(rchild(i) < size && array[rchild(i)] > array[max_]){\r\n        max_ = rchild(i);\r\n    }\r\n\r\n    if(max_ === i) {\r\n        animation.push({i1: max_, i2: i, ok: true});\r\n        return;\r\n    }\r\n    \r\n    [array[max_], array[i]] = [array[i], array[max_]];\r\n    animation.push({i1: max_, i2: i, ok: false});\r\n\r\n    max_heapify(max_, array, size, animation);\r\n}\r\n\r\nfunction create_max_heap(array, animation){\r\n    const size = array.length;\r\n    for(let i = Math.floor(size/2) + 1; i >= 0; i --){\r\n        max_heapify(i, array, size, animation);\r\n    }\r\n}\r\n\r\nexport function heapSortAnimation(array){\r\n    console.log()\r\n    let n = array.length;\r\n\r\n    let animation = [];\r\n\r\n    let size = n;\r\n    create_max_heap(array, animation);\r\n\r\n    for(let i = n - 1; i > 0; i--){\r\n        [array[0], array[size -1]] = [array[size - 1], array[0]];\r\n        animation.push({i1: 0, i2: size - 1, ok: false});\r\n        size --;\r\n        max_heapify(0, array, size, animation);\r\n    }\r\n    return animation;\r\n} ","export function insertionSortAnimation(array){\r\n    console.log()\r\n    let n = array.length;\r\n\r\n    let animation = [];\r\n\r\n    for(let i = 1; i < n; i ++){\r\n        let j = i;\r\n        while(j > 0 && array[j-1] > array[j]){\r\n            [array[j], array[j-1]] = [array[j-1], array[j]];\r\n            animation.push({i1: j, i2: j-1, ok:false});\r\n            j--;\r\n        }\r\n        if(j > 0)\r\n            animation.push({i1: j, i2: j-1, ok:true});\r\n    }\r\n    return animation;\r\n}","export function mergeSortAnimation(array){\r\n    console.log(\"mergeSortAlgorithm\");\r\n    let animation = [];\r\n    let n = array.length;\r\n\r\n    mergesort(0, n - 1, array, animation);\r\n    return animation;\r\n}\r\n\r\nfunction mergesort(l, r, array, animation){\r\n    console.log(\"ms\", l, r);\r\n    if(r - l === 0) return;\r\n    let mid = Math.floor((l + r) /2);\r\n    mergesort(l, mid, array, animation);\r\n    mergesort(mid +1, r, array, animation);\r\n\r\n    merge(l, mid, r, array, animation);\r\n}\r\n\r\n\r\nfunction merge(l, mid, r, array, animation){\r\n    console.log(\"m\", l, mid, r);\r\n    let size = r - l + 1, size1 = mid - l +1, size2 = r - mid;\r\n    if(size <= 1) return;\r\n    let gap = Math.ceil(size /2);\r\n\r\n    while(gap > 0){\r\n        for(let i = l; i  + gap<= r; i ++){\r\n            if(array[i] > array[i + gap]){\r\n                [array[i], array[i +gap]] = [array[i + gap], array[i]];\r\n                animation.push({i1: i, i2: i + gap, ok:false});\r\n            }\r\n            else animation.push({i1: i, i2: i + gap, ok:true});\r\n        }\r\n        if(gap <= 1) break;\r\n        gap = Math.ceil(gap /2);\r\n    }\r\n}","export function quicksortAnimation(array){\r\n    console.log()\r\n    let n = array.length;\r\n\r\n    let animation = [];\r\n    console.log(array);\r\n    quicksort(0, n -1, array, animation);\r\n    console.log(array);\r\n    return animation;\r\n}\r\n\r\nfunction quicksort(l, r, array, animation){\r\n    if(r  - l === 0) return;\r\n    let p = partition(l, r, array, animation);\r\n\r\n    if(p-1 > l) quicksort(l, p - 1, array, animation);\r\n    if(r > p +1) quicksort(p + 1, r, array, animation);\r\n}\r\n\r\nfunction partition(l, r, array, animation){\r\n    // 1 2 3 4 5 6 7 8\r\n    let rangeSize = r - l + 1;\r\n    let randIndx = ((Math.floor(Math.random() * 100)) % rangeSize) + l;\r\n    // let randIndx = r;\r\n    [array[randIndx], array[r]] = [array[r], array[randIndx]];\r\n    animation.push({i1: randIndx, i2: r, ok:false});\r\n   \r\n    let i = l;\r\n    for(let j = l; j < r; j ++){\r\n        if(array[j] <= array[r]){\r\n            [array[i], array[j]] = [array[j], array[i]];\r\n            animation.push({i1: i, i2: j, ok:false});\r\n            i++;\r\n        }\r\n        else {\r\n            animation.push({i1: i, i2: j, ok:true});\r\n        }\r\n    }\r\n    if(i !== r){\r\n        [array[i], array[r]] = [array[r], array[i]];\r\n        animation.push({i1: i, i2: r, ok:false});\r\n    }\r\n    \r\n    return i;\r\n}","export function selectionSortAnimation(array){\r\n    console.log()\r\n    let n = array.length;\r\n\r\n    let animation = [];\r\n\r\n    for(let i = 0; i < n; i ++){\r\n        let minIdx = i;\r\n        for(let j = i + 1; j < n; j ++){\r\n            if(array[j] < array[minIdx]){\r\n                minIdx = j;\r\n                animation.push({i1: minIdx, i2: j, ok:true});//just highlight\r\n            }\r\n            else animation.push({i1: minIdx, i2: j, ok:true});// just highlight\r\n        }\r\n        if(minIdx !== i){\r\n            [array[minIdx], array[i]] = [array[i], array[minIdx]];\r\n            animation.push({i1: minIdx, i2: i, ok:false}); //swapping && highlight\r\n        }\r\n        else animation.push({i1: minIdx, i2: i, ok:true}); //no swapping &&  highlight\r\n    }\r\n    return animation;\r\n}","import React, { Component } from 'react';\r\nimport { bubbleSortAnimation } from '../Sorting Algorithms/bubbleSort';\r\nimport { heapSortAnimation } from '../Sorting Algorithms/heapSort';\r\nimport { insertionSortAnimation } from '../Sorting Algorithms/insertionSort';\r\nimport { mergeSortAnimation } from '../Sorting Algorithms/mergeSort';\r\nimport { quicksortAnimation } from '../Sorting Algorithms/quickSort';\r\nimport { selectionSortAnimation } from '../Sorting Algorithms/selectionSort';\r\n\r\nclass SortingVisualizer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            array:[], //array of int\r\n            array_size: 30, \r\n            speed:5, \r\n            isVisualSorted: false,\r\n            backgroundColor : {\r\n                default: \"#778beb\",\r\n                rightPosition: \"#20bf6b\",\r\n                wrongPosition: \"#FC427B\"\r\n            }\r\n        }\r\n        this.create_array = this.create_array.bind(this);\r\n        // this.sorting_ = this.sorting_.bind(this);\r\n        this.create_visualizer_elements = this.create_visualizer_elements.bind(this);\r\n        this.speedChange = this.speedChange.bind(this);\r\n\r\n    }\r\n\r\n\r\n    reset_array = ()=>{\r\n        this.setState({array: this.create_array()});\r\n    }\r\n\r\n    create_array(array_size = this.state.array_size){\r\n        console.log(\"create_array()\");\r\n        let new_array = [];\r\n        const max_value = 550;\r\n        for(let i = 0; i< array_size; i ++){\r\n            const new_value = ((Math.floor((Math.random() * 1000))) % max_value) + 1;\r\n            new_array.push(new_value);\r\n        }\r\n        return new_array;\r\n        // this.setState({array: new_array});\r\n        // this.sorting_();\r\n    }\r\n\r\n    componentDidMount(){\r\n        console.log(\"component did mount ()\");\r\n        this.setState({array: this.create_array()});\r\n    }\r\n\r\n    create_visualizer_elements (){\r\n        console.log(\"create_visualizer_elements()\")\r\n        console.log(this.state.array);\r\n        return this.state.array.map((element)=>{\r\n            let h = element.toString() + \"px\";\r\n            return <div style={{height:h}}  className=\"visualizer-elements\"></div>\r\n        })\r\n    }\r\n\r\n    showAnimation = (sortAnimationFunction)=>{\r\n        //it takes animation array and manipulate the DOM to show sorting animation\r\n        console.log(\"sort\");\r\n\r\n        //getting animation array\r\n        let animation = sortAnimationFunction(this.state.array);\r\n\r\n        const bars = document.getElementsByClassName(\"visualizer-elements\");\r\n        const objectsToBlock = document.querySelectorAll(\".toBlockWhileAnimation\");\r\n\r\n        // blocking buttons and slider while animation\r\n        objectsToBlock.forEach(element => {\r\n            element.classList.remove(\"cursor-pointer\");\r\n            element.classList.add(\"cursor-not-allowed\");\r\n            element.disabled = true;\r\n\r\n        });\r\n\r\n        // console.log(\"create array disable\", createArray.disabled);\r\n        console.log(\"animation.length\", animation.length);\r\n\r\n        let interval = 500/(this.state.speed), it = 0;\r\n        let timeout = interval - 10\r\n        let ob = setInterval(() => {\r\n            if(it >= animation.length){\r\n                clearInterval(ob);\r\n                // createArray.disabled = false;\r\n                // speedSlidder.disabled = false;\r\n                // sizeSlidder.disabled = false;\r\n\r\n                objectsToBlock.forEach(element => {\r\n                    element.classList.remove(\"cursor-not-allowed\");\r\n                    element.classList.add(\"cursor-pointer\");\r\n                    element.disabled = false;\r\n                });\r\n            }\r\n            else{\r\n                 // console.log(animation[i].id1);\r\n                 const element1 = bars[animation[it].i1];\r\n                 const element2 = bars[animation[it].i2];\r\n \r\n                if(animation[it].ok){\r\n                    element1.style.backgroundColor = element2.style.backgroundColor= this.state.backgroundColor.rightPosition;\r\n                    setTimeout(() => {\r\n                        element1.style.backgroundColor = this.state.backgroundColor.default;\r\n                        element2.style.backgroundColor = this.state.backgroundColor.default;\r\n                    }, timeout);\r\n                }\r\n                else{\r\n                    element1.style.backgroundColor = element2.style.backgroundColor= this.state.backgroundColor.wrongPosition;\r\n                    setTimeout(() => {\r\n                        element1.style.backgroundColor = this.state.backgroundColor.default;\r\n                        element2.style.backgroundColor = this.state.backgroundColor.default;\r\n                    }, timeout);\r\n                    [element1.style.height, element2.style.height] = [element2.style.height, element1.style.height];\r\n                }\r\n              \r\n                it++;\r\n            }\r\n        }, interval);\r\n      \r\n    }\r\n\r\n    speedChange = (e)=>{\r\n        console.log(\"speedChange()\");\r\n        // console.log(e.target);\r\n        this.setState({speed: e.target.value})\r\n    }\r\n    arraySizeChange = (e)=>{\r\n        console.log(\"arraySizeChange()\");\r\n\r\n        console.log(e.target.value);\r\n        this.setState({array_size: e.target.value, array: this.create_array(e.target.value)});\r\n    }\r\n  \r\n    render() { \r\n        console.log(this.state.array );\r\n\r\n        return (\r\n            <> \r\n                <div className=\"header\">\r\n                    <h1>Sorting Visualizer</h1>\r\n                    <div className=\"buttons-div\">\r\n                        <button className=\"button sort  toBlockWhileAnimation cursor-pointer\" onClick={() => {this.showAnimation(bubbleSortAnimation)}}>Bubble Sort</button>\r\n                        <button className=\"button sort toBlockWhileAnimation cursor-pointer\" onClick={() => {this.showAnimation(insertionSortAnimation)}}>Insertion Sort</button>\r\n                        <button className=\"button sort  toBlockWhileAnimation cursor-pointer\" onClick={() => {this.showAnimation(selectionSortAnimation)}}>Selection Sort</button>\r\n                        <button className=\"button sort toBlockWhileAnimation cursor-pointer\" onClick={() => {this.showAnimation(quicksortAnimation)}}>QuickSort Sort</button>\r\n                        <button className=\"button sort toBlockWhileAnimation cursor-pointer\" onClick={() => {this.showAnimation(heapSortAnimation)}}>Heap Sort</button>\r\n                        <button className=\"button sort toBlockWhileAnimation cursor-pointer\" onClick={() => {this.showAnimation(mergeSortAnimation)}}>Merge Sort</button>\r\n                        <button className=\"button create-array toBlockWhileAnimation cursor-pointer\" onClick={this.reset_array} >Reset</button>\r\n                    </div>\r\n                    <div className=\"sliders\">\r\n                        <div className=\"slider-div\">\r\n                            <level for=\"speed-slid\">Speed</level>\r\n                            <input type=\"range\" min=\"1\" max=\"40\" name=\"range\" defaultValue=\"5\" className=\"slider toBlockWhileAnimation  speed-slider cursor-pointer\"  id=\"speed-slid\" onChange={(e) => {this.speedChange(e)}} ref={(input)=> this.myinput = input}></input>\r\n                        </div>\r\n                        <div className=\"slider-div\">\r\n                            <level for=\"sizeOfArray\">Size</level>\r\n                            <input type=\"range\" min=\"10\" max=\"80\" name=\"range1\" defaultValue=\"20\" className=\"array-size  toBlockWhileAnimation slider size-slider cursor-pointer\"  id=\"sizeOfArray\" onChange={(e) => {this.arraySizeChange(e)}} ref={(input)=> this.myinput1 = input}></input>\r\n                        </div>\r\n                        \r\n                        {/* no effect of ref ?? */}\r\n                    </div>\r\n                </div>\r\n                <div className=\"visualizer\">\r\n                    {this.create_visualizer_elements()}\r\n                </div>\r\n            </>\r\n         );\r\n    }\r\n}\r\n \r\nexport default SortingVisualizer;\r\n","import './App.css';\r\nimport SortingVisualizer from './Sorting Visualizer Components/SortingVisualizer';\r\n\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <SortingVisualizer></SortingVisualizer>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}